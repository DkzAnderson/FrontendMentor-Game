const $ = (element)=> document.querySelector(element);
const $all = (element)=> document.querySelectorAll(element);

const icons = [
    rock    = {
        icon: '<svg xmlns="http://www.w3.org/2000/svg" width="48" height="48"><path fill="#3B4262" d="M45.06 12.22c-.642-8.096-9.734-7.269-9.734-7.269-3.837-6.765-9.832-1.865-9.832-1.865-4.606-6.63-10.38-.486-10.38-.486-9.957-1.074-9.571 7.066-9.571 7.066-.234 2.588 1.403 10.593 1.403 10.593-1.477-4.614-4.68-.784-4.68-.784-3.94 6.078-.975 9.405-.975 9.405 5.33 6.246 16.688 13.743 16.688 13.743 4.113 2.356 2.373 4.457 2.373 4.457l24.876-4.11.571-4.718c3.782-11.436-.739-26.032-.739-26.032z"/></svg>',
        name: 'rock'
    },
    paper   = {
        icon: '<svg xmlns="http://www.w3.org/2000/svg" width="49" height="59"><path fill="#3B4262" d="M47.125 11.832a2.922 2.922 0 00-1.232-.198c-.57.04-1.029.271-1.302.65-1.604 2.248-2.919 6.493-3.979 9.905-.486 1.577-1.14 3.688-1.612 4.69-.493-2.807.064-13.09.28-17.05l.003-.064c.15-2.751.17-3.234.138-3.446-.238-1.509-.843-2.5-1.799-2.943-.966-.45-2.22-.25-3.572.563-.677.41-.865 1.816-1.446 8.19l-.002.028c-.32 3.502-1.058 11.566-1.965 12.91-1.023-1.88-2.431-12.555-3.039-17.176-.425-3.236-.673-5.094-.84-5.655-.35-1.176-1.83-2.176-3.295-2.232-1.22-.06-2.22.56-2.698 1.638-.894.995-.578 4.292.41 12.102.47 3.718 1.44 11.395.83 12.257-1.219-.133-3.31-4.942-6.215-14.299-.816-2.62-1.068-3.408-1.318-3.753-.494-1.202-2.172-2.129-3.676-2.024a3.183 3.183 0 00-.377.049c-.787.156-2.584.881-2.2 4.226 1.06 4.637 2.213 8.041 3.331 11.346l.023.066c.669 1.98 1.302 3.85 1.89 5.925 1.385 4.9.846 7.94.84 7.975-.046.312-.143.503-.288.57a.556.556 0 01-.195.045c-.44.03-1.098-.26-1.437-.45-.776-1.482-4.636-8.544-8.134-9.524l-.126-.037-.127.012c-1.283.121-2.226.606-2.803 1.441-.914 1.32-.535 3.002-.444 3.34l.052.12c.028.051 2.834 5.165 3.268 7.544.374 2.04 2.311 4.25 3.869 6.026l.064.073c.508.58.946 1.083 1.292 1.548 4.519 4.713 11.665 8.677 11.723 8.71.892.657 1.387 1.293 1.44 1.84a.798.798 0 01-.16.58l-.155.162.988.96 18.853-1.324.804-3.684c2.486-10.402 1.967-19.272 1.958-19.33.01-.327.706-3.483 1.266-6.033l.017-.065c1.117-5.08 2.505-11.4 2.772-13.803.116-1.028-.542-1.972-1.675-2.401z"/></svg>',
        name: 'paper'
    },
    scissors= {
        icon: '<svg xmlns="http://www.w3.org/2000/svg" width="51" height="58"><path fill="#3B4262" d="M13.971 25.702l6.012-8.415c-2.499-.415-7.088-.507-10.846 3.235C3.212 26.421.812 39.163.312 42.248L15.37 57.24c2.711-.232 14.713-1.827 26.279-13.34.122-.249 2.94-2.321.636-4.614-1.1-1.095-2.919-1.074-4.042.044-.572.57-1.461.577-2.021.02-.56-.557-.552-1.443.02-2.012l4.087-4.069c2.076-2.067.119-5.555-2.78-4.717l-3.345 2.851c-.611.53-1.52.439-2.022-.14-.519-.597-.408-1.503.183-2.013 11.687-10.208 9.98-8.979 17.5-15.995 2.809-2.329-.725-6.447-3.493-4.09L28.182 25.45c-.529.448-1.34.457-1.86-.02-.601-.517-.615-1.262-.222-1.85L38.787 3.944c1.854-2.5-1.795-5.277-3.749-2.757L16.28 27.307c-.452.65-1.364.8-1.985.345a1.377 1.377 0 01-.323-1.95z"/></svg>',
        name: 'scissors'
    },
    lizard  = {
        icon: '<svg xmlns="http://www.w3.org/2000/svg" width="63" height="60"><path fill="#3B4262" d="M49.483 2.096c3.229-2 6.324-2.433 8.714-1.219 5.359 2.72 4.583 12.845 2.39 17.232-1.238 2.477-3.432 4.287-6.527 5.387-1.2 3.799-2.884 7.064-5.034 9.764a7.904 7.904 0 005.079 1.837h.09l3.02-2.982c.761-.75 1.994-.751 2.754 0 .76.75.76 1.968 0 2.718l-.267.264h.608c1.075 0 1.947.861 1.947 1.923 0 1.061-.872 1.922-1.947 1.922h-.608l.267.264c.76.75.76 1.968 0 2.719-.38.375-.878.563-1.376.563-.499 0-.997-.188-1.377-.563l-3.022-2.983h-.09a11.823 11.823 0 01-7.724-2.857c-.415.377-.843.738-1.284 1.083-3.732 2.92-8.294 4.617-13.627 5.082a12.08 12.08 0 01.343 6.352l-.02.09 2.325 3.66a1.998 1.998 0 01-.589 2.741 1.936 1.936 0 01-1.057.316 1.953 1.953 0 01-1.651-.912l-.206-.324-.13.605a1.966 1.966 0 01-1.913 1.562 1.95 1.95 0 01-.419-.046 1.984 1.984 0 01-1.498-2.36l.13-.605-.32.209a1.946 1.946 0 01-2.709-.597 1.998 1.998 0 01.59-2.74l3.617-2.353.02-.09a8.073 8.073 0 00-.713-5.394 44.773 44.773 0 01-4.797-.4c-4.684-.634-7.341 1.433-8.044 2.081-5.518 5.093-6.586 14.092-6.596 14.183a1.977 1.977 0 01-1.96 1.757 1.97 1.97 0 01-1.63-.867c-.087-.13-2.164-3.234-3.075-7.615-1.237-5.95.238-11.407 4.266-15.783a20.702 20.702 0 018.738-5.615l-.407.106a7.99 7.99 0 00-3.375-.747h-.09l-3.032 2.983a1.965 1.965 0 01-1.382.563c-.5 0-1-.188-1.382-.563a1.9 1.9 0 010-2.719l.268-.264h-.61c-1.08 0-1.954-.86-1.954-1.922 0-1.062.875-1.922 1.954-1.922h.61l-.268-.264a1.9 1.9 0 010-2.72c.763-.75 2-.75 2.764 0l3.032 2.983h.09a11.87 11.87 0 018.661 3.726l-.217-.223a22.914 22.914 0 015.352.095c4.946.67 8.99-.018 12.113-2.052a12.215 12.215 0 01-2.71-7.7v-.092L30.6 16.287a2.034 2.034 0 010-2.812 1.885 1.885 0 012.725 0l.265.273v-.621c0-1.099.862-1.989 1.926-1.989s1.927.89 1.927 1.989v.62l.265-.272a1.885 1.885 0 012.725 0c1.146 1.183.32 2.483 0 2.812l-2.99 3.086v.091c0 1.878.635 3.673 1.771 5.098 1.412-1.686 2.522-3.808 3.325-6.36-.587-1.625-1.5-5.473.828-9.837 1.22-2.285 3.564-4.687 6.117-6.269z"/></svg>',
        name: 'lizard'
    },
    spock   = {
        icon: '<svg xmlns="http://www.w3.org/2000/svg" width="45" height="59"><path fill="#3B4262" d="M44.042 32.422l-.863-.86c-2.062-2.054-5.433-2.5-7.95-1.06l-5.376 3.059 1.12-24.502c0-2.054-1.678-3.726-3.743-3.726-.446 0-.875.079-1.273.222l.134-1.315c0-2.077-1.705-3.767-3.798-3.767-1.936 0-3.559 1.445-3.764 3.299l-3.45 20.75c-.045.282-.536.253-.588.075L10.416 7.962a3.658 3.658 0 00-3.502-2.629c-1.118 0-2.157.501-2.853 1.375a3.592 3.592 0 00-.69 3.08l.792 3.35a3.34 3.34 0 00-1.335.168 3.447 3.447 0 00-2.326 3.818L2.9 30.85c0 5.415.953 9.423 1.754 11.83a13.61 13.61 0 01.687 4.291c0 1.284-.179 2.562-.534 3.796l-1.86 6.482c-.104.366-.03.76.198 1.065.232.304.592.483.975.483h21.97a1.218 1.218 0 001.16-1.6c-.013-.031-1.033-3.169-.067-7.437 1.225-.99 5.514-4.462 7.054-5.862 2.546-2.315 9.521-9.468 9.817-9.772a1.21 1.21 0 00-.012-1.705z"/></svg>',
        name: 'spock'
    } ,
]

const options = {
    languages: [
        [
            'English',
            'Spanish'
        ],
        [
            'Ingles',
            'Español'
        ]
    ],
    versions: [
        [
            'Original',
            'Sheldon'
        ],
        [
            'Original',
            'Sheldon'
        ]
    ],
    themes  : [
        [
            'Light'  ,
            'Dark'   ,
            'Custom',
        ],
        [
            'Claro',
            'Oscuro',
            'Personalizado',
        ]
    ]
}

const texts = {
    win: [
        'YOU WIN',
        'HAS GANADO'
    ],
    lose: [
        'YOU LOSE',
        'HAS PERDIDO'
    ],
    tie: [
        'TIE',
        'EMPATE'
    ],
    picked:[
        'YOU PICKED',
        'HAZ SELECCIONADO'
    ],
    pcPicked:[
        'THE HOUSE PICKED',
        'LA CASA SELECCIONO'
    ],
    playAgain:[
        'PLAY AGAIN',
        'JUGAR DE NUEVO'
    ],
    score:[
        'SCORE',
        'PUNTAJE'
    ],
    menus:{
        continue:[
            'Continue',
            'Continuar'
        ],
        newGame:[
            'New Game',
            'Juego Nuevo'
        ],
        Option:[
            'Options',
            'Opciones'
        ],
        bestScore:[
            'Best Score',
            'Mejores Puntajes'
        ],
        theme:[
            'Themes',
            'Temas'
        ],
        language:[
            'Language',
            'Lenguaje'
        ],
        version:[
            'Version',
            'Versión'
        ],
        save: [
            'Save',
            'Guardar'
        ]
    },
    rulesBtn:[
        'RULES',
        'REGLAS'
    ],
    back:[
        'BACK',
        'VOLVER'
    ]
}

const txtHTML = {
    menuMain    : $all('.App .menu .main button'),
    menuOptions : $all('.App .menu .options .btn'),
    picked      : $all('.main .game-result .up h4')
}

const interfaces = {
    score       : $('.App .score'),
    main        : $('.App .main'),
    menu        : $('.App .menu'),
    menuMain    : $('.App .menu .main'),
    menuOptions : $('.menu .options'),
    choice      : $('.App .main .game-choice'),
    gameVersion : {
        sheldon : $('.main .game-choice .version_sheldon'),
        original: $('.main .game-choice .version_original')
    },
    results     : {
        main: $('.App .main .game-result'),
        up  : $('.main .game-result .up'),
        down: $('.main .game-result .down')
    },
    btnRules    : $('.App .btn-rules'),
    buttons     : $('.App .buttons'),
    rules       : {
        interfaz: $('.App .rules'),
        exitBtn : $('.rules .rules_exit')
    }
}

const others = {
    score         : {
        logo: $('.score .version'),
        txt : $('.score .score-box h3')
    },
    playAgain     : $('.game-result .down button'),
    result        : $('.App #result'),
    choiceSelected: $('.game-result .up .left button'),
    pcChoice      : $('.game-result .up .right button'),
    optionsArrows : {
        left: $('.menu .options div .left'),
        right: $('.menu .options div .right')
    },
    versionIcons  : {
        original: '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="162" height="99"><defs><filter id="a" width="107.7%" height="112.9%" x="-3.9%" y="-3.2%" filterUnits="objectBoundingBox"><feOffset dy="3" in="SourceAlpha" result="shadowOffsetOuter1"/><feGaussianBlur in="shadowOffsetOuter1" result="shadowBlurOuter1" stdDeviation="1.5"/><feColorMatrix in="shadowBlurOuter1" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.196705638 0"/></filter><path id="b" d="M39.28 56a.463.463 0 00.34-.14.463.463 0 00.14-.34V44.6c0-.133.067-.2.2-.2h2.52c.08 0 .147.053.2.16l4.04 11.04c.08.267.267.4.56.4h4.88c.293 0 .44-.12.44-.36a.445.445 0 00-.04-.2L48 43.96c-.053-.133-.013-.227.12-.28 1.36-.613 2.413-1.547 3.16-2.8.747-1.253 1.12-2.733 1.12-4.44 0-1.653-.333-3.12-1-4.4a7.203 7.203 0 00-2.84-2.98c-1.227-.707-2.627-1.06-4.2-1.06H34.6a.463.463 0 00-.34.14.463.463 0 00-.14.34v27.04c0 .133.047.247.14.34.093.093.207.14.34.14h4.68zm4.16-15.92h-3.48c-.133 0-.2-.067-.2-.2v-6.84c0-.133.067-.2.2-.2h3.48c.987 0 1.787.327 2.4.98s.92 1.54.92 2.66c0 1.093-.307 1.967-.92 2.62s-1.413.98-2.4.98zm21.2 16.28c1.84 0 3.467-.373 4.88-1.12 1.413-.747 2.507-1.8 3.28-3.16.773-1.36 1.16-2.947 1.16-4.76V36.68c0-1.787-.387-3.36-1.16-4.72-.773-1.36-1.867-2.413-3.28-3.16-1.413-.747-3.04-1.12-4.88-1.12-1.84 0-3.46.373-4.86 1.12a8.003 8.003 0 00-3.26 3.16c-.773 1.36-1.16 2.933-1.16 4.72v10.64c0 1.813.387 3.4 1.16 4.76a8.003 8.003 0 003.26 3.16c1.4.747 3.02 1.12 4.86 1.12zm0-4.84c-1.093 0-1.973-.367-2.64-1.1-.667-.733-1-1.687-1-2.86V36.52c0-1.2.333-2.167 1-2.9.667-.733 1.547-1.1 2.64-1.1 1.12 0 2.013.367 2.68 1.1.667.733 1 1.7 1 2.9v11.04c0 1.173-.333 2.127-1 2.86-.667.733-1.56 1.1-2.68 1.1zm21.76 4.8c1.813 0 3.413-.353 4.8-1.06 1.387-.707 2.46-1.713 3.22-3.02.76-1.307 1.14-2.813 1.14-4.52v-.12a.463.463 0 00-.14-.34.463.463 0 00-.34-.14l-4.68-.2c-.32 0-.48.147-.48.44v.52c0 1.093-.32 1.967-.96 2.62-.64.653-1.493.98-2.56.98s-1.92-.327-2.56-.98c-.64-.653-.96-1.527-.96-2.62V36.16c0-1.093.32-1.973.96-2.64.64-.667 1.493-1 2.56-1s1.92.333 2.56 1c.64.667.96 1.547.96 2.64v.52c0 .293.16.44.48.44l4.68-.2a.436.436 0 00.34-.16.533.533 0 00.14-.36v-.2c0-1.707-.38-3.2-1.14-4.48-.76-1.28-1.833-2.273-3.22-2.98-1.387-.707-2.987-1.06-4.8-1.06-1.813 0-3.413.36-4.8 1.08-1.387.72-2.46 1.74-3.22 3.06-.76 1.32-1.14 2.847-1.14 4.58v11.12c0 1.76.38 3.307 1.14 4.64a7.716 7.716 0 003.22 3.08c1.387.72 2.987 1.08 4.8 1.08zm17.92-.32a.463.463 0 00.34-.14.463.463 0 00.14-.34v-8c0-.053.027-.133.08-.24l1.8-2.6c.053-.08.107-.12.16-.12.053 0 .093.04.12.12l5.68 10.96c.133.24.32.36.56.36h5.12c.293 0 .44-.107.44-.32a.614.614 0 00-.08-.24l-7.84-15.12a.498.498 0 010-.28l7.4-11.48c.107-.16.127-.293.06-.4-.067-.107-.193-.16-.38-.16h-5.16a.627.627 0 00-.56.32l-7.16 10.88c-.027.08-.073.107-.14.08-.067-.027-.1-.08-.1-.16V28.48a.463.463 0 00-.14-.34.463.463 0 00-.34-.14h-4.68a.463.463 0 00-.34.14.463.463 0 00-.14.34v27.04c0 .133.047.247.14.34.093.093.207.14.34.14h4.68zM39.16 88a.463.463 0 00.34-.14.463.463 0 00.14-.34v-10.4c0-.133.067-.2.2-.2h4.32c1.6 0 3.02-.347 4.26-1.04a7.197 7.197 0 002.88-2.94c.68-1.267 1.02-2.727 1.02-4.38 0-1.68-.34-3.173-1.02-4.48-.68-1.307-1.64-2.32-2.88-3.04-1.24-.72-2.66-1.08-4.26-1.08h-9.68a.463.463 0 00-.34.14.463.463 0 00-.14.34v27.08c0 .133.047.247.14.34.093.093.207.14.34.14h4.68zm4.08-15.56h-3.4c-.133 0-.2-.067-.2-.2v-7.2c0-.133.067-.2.2-.2h3.4c1.04 0 1.873.347 2.5 1.04.627.693.94 1.627.94 2.8 0 1.147-.313 2.06-.94 2.74-.627.68-1.46 1.02-2.5 1.02zM59.36 88c.267 0 .44-.133.52-.4l.92-3.92c.027-.107.093-.16.2-.16h7.48c.107 0 .173.053.2.16l.92 3.92c.08.267.267.4.56.4h4.88c.293 0 .44-.12.44-.36l-.04-.16-7.2-27.08c-.08-.267-.267-.4-.56-.4h-5.8c-.293 0-.48.133-.56.4l-7.2 27.08c-.08.347.053.52.4.52h4.84zm8-8.84h-5.28a.266.266 0 01-.16-.06c-.053-.04-.067-.1-.04-.18l2.68-11.6c.027-.107.067-.16.12-.16.053 0 .093.053.12.16l2.76 11.6c.027.08.013.14-.04.18a.266.266 0 01-.16.06zM83.48 88a.463.463 0 00.34-.14.463.463 0 00.14-.34v-10.4c0-.133.067-.2.2-.2h4.32c1.6 0 3.02-.347 4.26-1.04a7.197 7.197 0 002.88-2.94c.68-1.267 1.02-2.727 1.02-4.38 0-1.68-.34-3.173-1.02-4.48-.68-1.307-1.64-2.32-2.88-3.04-1.24-.72-2.66-1.08-4.26-1.08H78.8a.463.463 0 00-.34.14.463.463 0 00-.14.34v27.08c0 .133.047.247.14.34.093.093.207.14.34.14h4.68zm4.08-15.56h-3.4c-.133 0-.2-.067-.2-.2v-7.2c0-.133.067-.2.2-.2h3.4c1.04 0 1.873.347 2.5 1.04.627.693.94 1.627.94 2.8 0 1.147-.313 2.06-.94 2.74-.627.68-1.46 1.02-2.5 1.02zM116.24 88a.463.463 0 00.34-.14.463.463 0 00.14-.34v-3.88a.463.463 0 00-.14-.34.463.463 0 00-.34-.14h-10.72c-.133 0-.2-.067-.2-.2v-6.44c0-.133.067-.2.2-.2h6.68a.463.463 0 00.34-.14.463.463 0 00.14-.34v-3.88a.463.463 0 00-.14-.34.463.463 0 00-.34-.14h-6.68c-.133 0-.2-.067-.2-.2v-6.24c0-.133.067-.2.2-.2h10.72a.463.463 0 00.34-.14.463.463 0 00.14-.34v-3.88a.463.463 0 00-.14-.34.463.463 0 00-.34-.14h-16.08a.463.463 0 00-.34.14.463.463 0 00-.14.34v27.04c0 .133.047.247.14.34.093.093.207.14.34.14h16.08zm9.04 0a.463.463 0 00.34-.14.463.463 0 00.14-.34V76.6c0-.133.067-.2.2-.2h2.52c.08 0 .147.053.2.16l4.04 11.04c.08.267.267.4.56.4h4.88c.293 0 .44-.12.44-.36a.445.445 0 00-.04-.2L134 75.96c-.053-.133-.013-.227.12-.28 1.36-.613 2.413-1.547 3.16-2.8.747-1.253 1.12-2.733 1.12-4.44 0-1.653-.333-3.12-1-4.4a7.203 7.203 0 00-2.84-2.98c-1.227-.707-2.627-1.06-4.2-1.06h-9.76a.463.463 0 00-.34.14.463.463 0 00-.14.34v27.04c0 .133.047.247.14.34.093.093.207.14.34.14h4.68zm4.16-15.92h-3.48c-.133 0-.2-.067-.2-.2v-6.84c0-.133.067-.2.2-.2h3.48c.987 0 1.787.327 2.4.98s.92 1.54.92 2.66c0 1.093-.307 1.967-.92 2.62s-1.413.98-2.4.98zm-86.92 48.24c2.72 0 4.9-.713 6.54-2.14 1.64-1.427 2.46-3.353 2.46-5.78 0-1.36-.293-2.52-.88-3.48a8.124 8.124 0 00-2.18-2.38c-.867-.627-2.073-1.367-3.62-2.22l-.84-.48c-1.36-.667-2.373-1.207-3.04-1.62-.667-.413-1.16-.847-1.48-1.3-.32-.453-.48-.987-.48-1.6 0-.88.273-1.567.82-2.06.547-.493 1.3-.74 2.26-.74 1.147 0 2.053.32 2.72.96.667.64 1 1.44 1 2.4v.72c0 .133.047.247.14.34.093.093.207.14.34.14h4.6a.463.463 0 00.34-.14.463.463 0 00.14-.34v-.8c0-1.6-.387-3.013-1.16-4.24-.773-1.227-1.853-2.18-3.24-2.86-1.387-.68-2.973-1.02-4.76-1.02-1.707 0-3.227.313-4.56.94-1.333.627-2.367 1.52-3.1 2.68-.733 1.16-1.1 2.513-1.1 4.06 0 1.547.36 2.867 1.08 3.96.72 1.093 1.587 1.987 2.6 2.68 1.013.693 2.32 1.44 3.92 2.24 1.307.667 2.273 1.193 2.9 1.58.627.387 1.113.8 1.46 1.24.347.44.52.967.52 1.58 0 .827-.273 1.507-.82 2.04-.547.533-1.34.8-2.38.8-1.173 0-2.107-.313-2.8-.94-.693-.627-1.04-1.407-1.04-2.34v-.76a.463.463 0 00-.14-.34.463.463 0 00-.34-.14h-4.6a.463.463 0 00-.34.14.463.463 0 00-.14.34v1.04c0 1.547.38 2.913 1.14 4.1.76 1.187 1.833 2.107 3.22 2.76 1.387.653 3 .98 4.84.98zm21.08 0c1.813 0 3.413-.353 4.8-1.06 1.387-.707 2.46-1.713 3.22-3.02.76-1.307 1.14-2.813 1.14-4.52v-.12a.463.463 0 00-.14-.34.463.463 0 00-.34-.14l-4.68-.2c-.32 0-.48.147-.48.44v.52c0 1.093-.32 1.967-.96 2.62-.64.653-1.493.98-2.56.98s-1.92-.327-2.56-.98c-.64-.653-.96-1.527-.96-2.62v-11.72c0-1.093.32-1.973.96-2.64.64-.667 1.493-1 2.56-1s1.92.333 2.56 1c.64.667.96 1.547.96 2.64v.52c0 .293.16.44.48.44l4.68-.2a.436.436 0 00.34-.16.533.533 0 00.14-.36v-.2c0-1.707-.38-3.2-1.14-4.48-.76-1.28-1.833-2.273-3.22-2.98-1.387-.707-2.987-1.06-4.8-1.06-1.813 0-3.413.36-4.8 1.08-1.387.72-2.46 1.74-3.22 3.06-.76 1.32-1.14 2.847-1.14 4.58v11.12c0 1.76.38 3.307 1.14 4.64a7.716 7.716 0 003.22 3.08c1.387.72 2.987 1.08 4.8 1.08zm17.92-.32a.463.463 0 00.34-.14.463.463 0 00.14-.34V92.48a.463.463 0 00-.14-.34.463.463 0 00-.34-.14h-4.68a.463.463 0 00-.34.14.463.463 0 00-.14.34v27.04c0 .133.047.247.14.34.093.093.207.14.34.14h4.68zm13.08.32c2.72 0 4.9-.713 6.54-2.14 1.64-1.427 2.46-3.353 2.46-5.78 0-1.36-.293-2.52-.88-3.48a8.124 8.124 0 00-2.18-2.38c-.867-.627-2.073-1.367-3.62-2.22l-.84-.48c-1.36-.667-2.373-1.207-3.04-1.62-.667-.413-1.16-.847-1.48-1.3-.32-.453-.48-.987-.48-1.6 0-.88.273-1.567.82-2.06.547-.493 1.3-.74 2.26-.74 1.147 0 2.053.32 2.72.96.667.64 1 1.44 1 2.4v.72c0 .133.047.247.14.34.093.093.207.14.34.14h4.6a.463.463 0 00.34-.14.463.463 0 00.14-.34v-.8c0-1.6-.387-3.013-1.16-4.24-.773-1.227-1.853-2.18-3.24-2.86-1.387-.68-2.973-1.02-4.76-1.02-1.707 0-3.227.313-4.56.94-1.333.627-2.367 1.52-3.1 2.68-.733 1.16-1.1 2.513-1.1 4.06 0 1.547.36 2.867 1.08 3.96.72 1.093 1.587 1.987 2.6 2.68 1.013.693 2.32 1.44 3.92 2.24 1.307.667 2.273 1.193 2.9 1.58.627.387 1.113.8 1.46 1.24.347.44.52.967.52 1.58 0 .827-.273 1.507-.82 2.04-.547.533-1.34.8-2.38.8-1.173 0-2.107-.313-2.8-.94-.693-.627-1.04-1.407-1.04-2.34v-.76a.463.463 0 00-.14-.34.463.463 0 00-.34-.14h-4.6a.463.463 0 00-.34.14.463.463 0 00-.14.34v1.04c0 1.547.38 2.913 1.14 4.1.76 1.187 1.833 2.107 3.22 2.76 1.387.653 3 .98 4.84.98zm20.8 0c2.72 0 4.9-.713 6.54-2.14 1.64-1.427 2.46-3.353 2.46-5.78 0-1.36-.293-2.52-.88-3.48a8.124 8.124 0 00-2.18-2.38c-.867-.627-2.073-1.367-3.62-2.22l-.84-.48c-1.36-.667-2.373-1.207-3.04-1.62-.667-.413-1.16-.847-1.48-1.3-.32-.453-.48-.987-.48-1.6 0-.88.273-1.567.82-2.06.547-.493 1.3-.74 2.26-.74 1.147 0 2.053.32 2.72.96.667.64 1 1.44 1 2.4v.72c0 .133.047.247.14.34.093.093.207.14.34.14h4.6a.463.463 0 00.34-.14.463.463 0 00.14-.34v-.8c0-1.6-.387-3.013-1.16-4.24-.773-1.227-1.853-2.18-3.24-2.86-1.387-.68-2.973-1.02-4.76-1.02-1.707 0-3.227.313-4.56.94-1.333.627-2.367 1.52-3.1 2.68-.733 1.16-1.1 2.513-1.1 4.06 0 1.547.36 2.867 1.08 3.96.72 1.093 1.587 1.987 2.6 2.68 1.013.693 2.32 1.44 3.92 2.24 1.307.667 2.273 1.193 2.9 1.58.627.387 1.113.8 1.46 1.24.347.44.52.967.52 1.58 0 .827-.273 1.507-.82 2.04-.547.533-1.34.8-2.38.8-1.173 0-2.107-.313-2.8-.94-.693-.627-1.04-1.407-1.04-2.34v-.76a.463.463 0 00-.14-.34.463.463 0 00-.34-.14h-4.6a.463.463 0 00-.34.14.463.463 0 00-.14.34v1.04c0 1.547.38 2.913 1.14 4.1.76 1.187 1.833 2.107 3.22 2.76 1.387.653 3 .98 4.84.98zm21.2.04c1.84 0 3.467-.373 4.88-1.12 1.413-.747 2.507-1.8 3.28-3.16.773-1.36 1.16-2.947 1.16-4.76v-10.64c0-1.787-.387-3.36-1.16-4.72-.773-1.36-1.867-2.413-3.28-3.16-1.413-.747-3.04-1.12-4.88-1.12-1.84 0-3.46.373-4.86 1.12a8.003 8.003 0 00-3.26 3.16c-.773 1.36-1.16 2.933-1.16 4.72v10.64c0 1.813.387 3.4 1.16 4.76a8.003 8.003 0 003.26 3.16c1.4.747 3.02 1.12 4.86 1.12zm0-4.84c-1.093 0-1.973-.367-2.64-1.1-.667-.733-1-1.687-1-2.86v-11.04c0-1.2.333-2.167 1-2.9.667-.733 1.547-1.1 2.64-1.1 1.12 0 2.013.367 2.68 1.1.667.733 1 1.7 1 2.9v11.04c0 1.173-.333 2.127-1 2.86-.667.733-1.56 1.1-2.68 1.1zm18.24 4.48a.463.463 0 00.34-.14.463.463 0 00.14-.34V108.6c0-.133.067-.2.2-.2h2.52c.08 0 .147.053.2.16l4.04 11.04c.08.267.267.4.56.4h4.88c.293 0 .44-.12.44-.36a.445.445 0 00-.04-.2l-4.56-11.48c-.053-.133-.013-.227.12-.28 1.36-.613 2.413-1.547 3.16-2.8.747-1.253 1.12-2.733 1.12-4.44 0-1.653-.333-3.12-1-4.4a7.203 7.203 0 00-2.84-2.98c-1.227-.707-2.627-1.06-4.2-1.06h-9.76a.463.463 0 00-.34.14.463.463 0 00-.14.34v27.04c0 .133.047.247.14.34.093.093.207.14.34.14h4.68zm4.16-15.92h-3.48c-.133 0-.2-.067-.2-.2v-6.84c0-.133.067-.2.2-.2H159c.987 0 1.787.327 2.4.98s.92 1.54.92 2.66c0 1.093-.307 1.967-.92 2.62s-1.413.98-2.4.98zm20.8 16.24c2.72 0 4.9-.713 6.54-2.14 1.64-1.427 2.46-3.353 2.46-5.78 0-1.36-.293-2.52-.88-3.48a8.124 8.124 0 00-2.18-2.38c-.867-.627-2.073-1.367-3.62-2.22l-.84-.48c-1.36-.667-2.373-1.207-3.04-1.62-.667-.413-1.16-.847-1.48-1.3-.32-.453-.48-.987-.48-1.6 0-.88.273-1.567.82-2.06.547-.493 1.3-.74 2.26-.74 1.147 0 2.053.32 2.72.96.667.64 1 1.44 1 2.4v.72c0 .133.047.247.14.34.093.093.207.14.34.14h4.6a.463.463 0 00.34-.14.463.463 0 00.14-.34v-.8c0-1.6-.387-3.013-1.16-4.24-.773-1.227-1.853-2.18-3.24-2.86-1.387-.68-2.973-1.02-4.76-1.02-1.707 0-3.227.313-4.56.94-1.333.627-2.367 1.52-3.1 2.68-.733 1.16-1.1 2.513-1.1 4.06 0 1.547.36 2.867 1.08 3.96.72 1.093 1.587 1.987 2.6 2.68 1.013.693 2.32 1.44 3.92 2.24 1.307.667 2.273 1.193 2.9 1.58.627.387 1.113.8 1.46 1.24.347.44.52.967.52 1.58 0 .827-.273 1.507-.82 2.04-.547.533-1.34.8-2.38.8-1.173 0-2.107-.313-2.8-.94-.693-.627-1.04-1.407-1.04-2.34v-.76a.463.463 0 00-.14-.34.463.463 0 00-.34-.14h-4.6a.463.463 0 00-.34.14.463.463 0 00-.14.34v1.04c0 1.547.38 2.913 1.14 4.1.76 1.187 1.833 2.107 3.22 2.76 1.387.653 3 .98 4.84.98z"/></defs><g fill="none" transform="translate(-30 -27)"><use fill="#000" filter="url(#a)" xlink:href="#b"/><use fill="#FFF" xlink:href="#b"/></g></svg>',

        sheldon : '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="115" height="114"><defs><filter id="a" width="111%" height="111.1%" x="-5.5%" y="-2.8%" filterUnits="objectBoundingBox"><feOffset dy="3" in="SourceAlpha" result="shadowOffsetOuter1"/><feGaussianBlur in="shadowOffsetOuter1" result="shadowBlurOuter1" stdDeviation="1.5"/><feColorMatrix in="shadowBlurOuter1" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.196705638 0"/></filter><path id="b" d="M37.096 42a.324.324 0 00.238-.098.324.324 0 00.098-.238V34.02c0-.093.047-.14.14-.14h1.764c.056 0 .103.037.14.112l2.828 7.728c.056.187.187.28.392.28h3.416c.205 0 .308-.084.308-.252a.312.312 0 00-.028-.14L43.2 33.572c-.037-.093-.01-.159.084-.196a4.812 4.812 0 002.212-1.96c.523-.877.784-1.913.784-3.108 0-1.157-.233-2.184-.7-3.08a5.042 5.042 0 00-1.988-2.086c-.859-.495-1.839-.742-2.94-.742H33.82a.324.324 0 00-.238.098.324.324 0 00-.098.238v18.928c0 .093.033.173.098.238a.324.324 0 00.238.098h3.276zm2.912-11.144h-2.436c-.093 0-.14-.047-.14-.14v-4.788c0-.093.047-.14.14-.14h2.436c.69 0 1.25.229 1.68.686.43.457.644 1.078.644 1.862 0 .765-.215 1.377-.644 1.834-.43.457-.99.686-1.68.686zm14.84 11.396c1.288 0 2.427-.261 3.416-.784a5.58 5.58 0 002.296-2.212c.541-.952.812-2.063.812-3.332v-7.448c0-1.25-.27-2.352-.812-3.304a5.58 5.58 0 00-2.296-2.212c-.99-.523-2.128-.784-3.416-.784-1.288 0-2.422.261-3.402.784a5.602 5.602 0 00-2.282 2.212c-.541.952-.812 2.053-.812 3.304v7.448c0 1.27.27 2.38.812 3.332a5.602 5.602 0 002.282 2.212c.98.523 2.114.784 3.402.784zm0-3.388c-.765 0-1.381-.257-1.848-.77-.467-.513-.7-1.18-.7-2.002v-7.728c0-.84.233-1.517.7-2.03.467-.513 1.083-.77 1.848-.77.784 0 1.41.257 1.876.77.467.513.7 1.19.7 2.03v7.728c0 .821-.233 1.489-.7 2.002-.467.513-1.092.77-1.876.77zm15.232 3.36c1.27 0 2.39-.247 3.36-.742a5.362 5.362 0 002.254-2.114c.532-.915.798-1.97.798-3.164v-.084a.324.324 0 00-.098-.238.324.324 0 00-.238-.098l-3.276-.14c-.224 0-.336.103-.336.308v.364c0 .765-.224 1.377-.672 1.834-.448.457-1.045.686-1.792.686-.747 0-1.344-.229-1.792-.686-.448-.457-.672-1.069-.672-1.834v-8.204c0-.765.224-1.381.672-1.848.448-.467 1.045-.7 1.792-.7.747 0 1.344.233 1.792.7.448.467.672 1.083.672 1.848v.364c0 .205.112.308.336.308l3.276-.14a.305.305 0 00.238-.112.373.373 0 00.098-.252v-.14c0-1.195-.266-2.24-.798-3.136-.532-.896-1.283-1.591-2.254-2.086-.97-.495-2.09-.742-3.36-.742s-2.39.252-3.36.756a5.426 5.426 0 00-2.254 2.142c-.532.924-.798 1.993-.798 3.206v7.784c0 1.232.266 2.315.798 3.248a5.401 5.401 0 002.254 2.156c.97.504 2.09.756 3.36.756zM82.624 42a.324.324 0 00.238-.098.324.324 0 00.098-.238v-5.6a.43.43 0 01.056-.168l1.26-1.82c.037-.056.075-.084.112-.084.037 0 .065.028.084.084l3.976 7.672c.093.168.224.252.392.252h3.584c.205 0 .308-.075.308-.224a.43.43 0 00-.056-.168l-5.488-10.584a.348.348 0 010-.196l5.18-8.036c.075-.112.089-.205.042-.28-.047-.075-.135-.112-.266-.112h-3.612a.439.439 0 00-.392.224l-5.012 7.616c-.019.056-.051.075-.098.056-.047-.019-.07-.056-.07-.112v-7.448a.324.324 0 00-.098-.238.324.324 0 00-.238-.098h-3.276a.324.324 0 00-.238.098.324.324 0 00-.098.238v18.928c0 .093.033.173.098.238a.324.324 0 00.238.098h3.276zM37.012 64a.324.324 0 00.238-.098.324.324 0 00.098-.238v-7.28c0-.093.047-.14.14-.14h3.024c1.12 0 2.114-.243 2.982-.728a5.038 5.038 0 002.016-2.058c.476-.887.714-1.909.714-3.066 0-1.176-.238-2.221-.714-3.136a5.158 5.158 0 00-2.016-2.128c-.868-.504-1.862-.756-2.982-.756h-6.776a.324.324 0 00-.238.098.324.324 0 00-.098.238v18.956c0 .093.033.173.098.238a.324.324 0 00.238.098h3.276zm2.856-10.892h-2.38c-.093 0-.14-.047-.14-.14v-5.04c0-.093.047-.14.14-.14h2.38c.728 0 1.311.243 1.75.728.439.485.658 1.139.658 1.96 0 .803-.22 1.442-.658 1.918-.439.476-1.022.714-1.75.714zM51.152 64c.187 0 .308-.093.364-.28l.644-2.744c.019-.075.065-.112.14-.112h5.236c.075 0 .121.037.14.112l.644 2.744c.056.187.187.28.392.28h3.416c.205 0 .308-.084.308-.252l-.028-.112-5.04-18.956c-.056-.187-.187-.28-.392-.28h-4.06c-.205 0-.336.093-.392.28l-5.04 18.956c-.056.243.037.364.28.364h3.388zm5.6-6.188h-3.696a.186.186 0 01-.112-.042c-.037-.028-.047-.07-.028-.126l1.876-8.12c.019-.075.047-.112.084-.112.037 0 .065.037.084.112l1.932 8.12c.019.056.01.098-.028.126a.186.186 0 01-.112.042zM68.036 64a.324.324 0 00.238-.098.324.324 0 00.098-.238v-7.28c0-.093.047-.14.14-.14h3.024c1.12 0 2.114-.243 2.982-.728a5.038 5.038 0 002.016-2.058c.476-.887.714-1.909.714-3.066 0-1.176-.238-2.221-.714-3.136a5.158 5.158 0 00-2.016-2.128c-.868-.504-1.862-.756-2.982-.756H64.76a.324.324 0 00-.238.098.324.324 0 00-.098.238v18.956c0 .093.033.173.098.238a.324.324 0 00.238.098h3.276zm2.856-10.892h-2.38c-.093 0-.14-.047-.14-.14v-5.04c0-.093.047-.14.14-.14h2.38c.728 0 1.311.243 1.75.728.439.485.658 1.139.658 1.96 0 .803-.22 1.442-.658 1.918-.439.476-1.022.714-1.75.714zM90.968 64a.324.324 0 00.238-.098.324.324 0 00.098-.238v-2.716a.324.324 0 00-.098-.238.324.324 0 00-.238-.098h-7.504c-.093 0-.14-.047-.14-.14v-4.508c0-.093.047-.14.14-.14h4.676a.324.324 0 00.238-.098.324.324 0 00.098-.238v-2.716a.324.324 0 00-.098-.238.324.324 0 00-.238-.098h-4.676c-.093 0-.14-.047-.14-.14v-4.368c0-.093.047-.14.14-.14h7.504a.324.324 0 00.238-.098.324.324 0 00.098-.238v-2.716a.324.324 0 00-.098-.238.324.324 0 00-.238-.098H79.712a.324.324 0 00-.238.098.324.324 0 00-.098.238v18.928c0 .093.033.173.098.238a.324.324 0 00.238.098h11.256zm6.328 0a.324.324 0 00.238-.098.324.324 0 00.098-.238V56.02c0-.093.047-.14.14-.14h1.764c.056 0 .103.037.14.112l2.828 7.728c.056.187.187.28.392.28h3.416c.205 0 .308-.084.308-.252a.312.312 0 00-.028-.14l-3.192-8.036c-.037-.093-.01-.159.084-.196a4.812 4.812 0 002.212-1.96c.523-.877.784-1.913.784-3.108 0-1.157-.233-2.184-.7-3.08a5.042 5.042 0 00-1.988-2.086c-.859-.495-1.839-.742-2.94-.742H94.02a.324.324 0 00-.238.098.324.324 0 00-.098.238v18.928c0 .093.033.173.098.238a.324.324 0 00.238.098h3.276zm2.912-11.144h-2.436c-.093 0-.14-.047-.14-.14v-4.788c0-.093.047-.14.14-.14h2.436c.69 0 1.25.229 1.68.686.43.457.644 1.078.644 1.862 0 .765-.215 1.377-.644 1.834-.43.457-.99.686-1.68.686zM39.364 86.224c1.904 0 3.43-.5 4.578-1.498 1.148-.999 1.722-2.347 1.722-4.046 0-.952-.205-1.764-.616-2.436a5.687 5.687 0 00-1.526-1.666c-.607-.439-1.451-.957-2.534-1.554l-.588-.336c-.952-.467-1.661-.845-2.128-1.134-.467-.29-.812-.593-1.036-.91a1.892 1.892 0 01-.336-1.12c0-.616.191-1.097.574-1.442.383-.345.91-.518 1.582-.518.803 0 1.437.224 1.904.672.467.448.7 1.008.7 1.68v.504c0 .093.033.173.098.238a.324.324 0 00.238.098h3.22a.324.324 0 00.238-.098.324.324 0 00.098-.238v-.56c0-1.12-.27-2.11-.812-2.968-.541-.859-1.297-1.526-2.268-2.002-.97-.476-2.081-.714-3.332-.714-1.195 0-2.259.22-3.192.658-.933.439-1.657 1.064-2.17 1.876-.513.812-.77 1.76-.77 2.842 0 1.083.252 2.007.756 2.772a6.714 6.714 0 001.82 1.876c.71.485 1.624 1.008 2.744 1.568.915.467 1.591.835 2.03 1.106.439.27.78.56 1.022.868.243.308.364.677.364 1.106 0 .579-.191 1.055-.574 1.428-.383.373-.938.56-1.666.56-.821 0-1.475-.22-1.96-.658a2.118 2.118 0 01-.728-1.638v-.532a.324.324 0 00-.098-.238.324.324 0 00-.238-.098h-3.22a.324.324 0 00-.238.098.324.324 0 00-.098.238v.728c0 1.083.266 2.04.798 2.87.532.83 1.283 1.475 2.254 1.932.97.457 2.1.686 3.388.686zm14.756 0c1.27 0 2.39-.247 3.36-.742a5.362 5.362 0 002.254-2.114c.532-.915.798-1.97.798-3.164v-.084a.324.324 0 00-.098-.238.324.324 0 00-.238-.098l-3.276-.14c-.224 0-.336.103-.336.308v.364c0 .765-.224 1.377-.672 1.834-.448.457-1.045.686-1.792.686-.747 0-1.344-.229-1.792-.686-.448-.457-.672-1.069-.672-1.834v-8.204c0-.765.224-1.381.672-1.848.448-.467 1.045-.7 1.792-.7.747 0 1.344.233 1.792.7.448.467.672 1.083.672 1.848v.364c0 .205.112.308.336.308l3.276-.14a.305.305 0 00.238-.112.373.373 0 00.098-.252v-.14c0-1.195-.266-2.24-.798-3.136-.532-.896-1.283-1.591-2.254-2.086-.97-.495-2.09-.742-3.36-.742s-2.39.252-3.36.756a5.426 5.426 0 00-2.254 2.142c-.532.924-.798 1.993-.798 3.206v7.784c0 1.232.266 2.315.798 3.248a5.401 5.401 0 002.254 2.156c.97.504 2.09.756 3.36.756zM66.664 86a.324.324 0 00.238-.098.324.324 0 00.098-.238V66.736a.324.324 0 00-.098-.238.324.324 0 00-.238-.098h-3.276a.324.324 0 00-.238.098.324.324 0 00-.098.238v18.928c0 .093.033.173.098.238a.324.324 0 00.238.098h3.276zm9.156.224c1.904 0 3.43-.5 4.578-1.498 1.148-.999 1.722-2.347 1.722-4.046 0-.952-.205-1.764-.616-2.436a5.687 5.687 0 00-1.526-1.666c-.607-.439-1.451-.957-2.534-1.554l-.588-.336c-.952-.467-1.661-.845-2.128-1.134-.467-.29-.812-.593-1.036-.91a1.892 1.892 0 01-.336-1.12c0-.616.191-1.097.574-1.442.383-.345.91-.518 1.582-.518.803 0 1.437.224 1.904.672.467.448.7 1.008.7 1.68v.504c0 .093.033.173.098.238a.324.324 0 00.238.098h3.22a.324.324 0 00.238-.098.324.324 0 00.098-.238v-.56c0-1.12-.27-2.11-.812-2.968-.541-.859-1.297-1.526-2.268-2.002-.97-.476-2.081-.714-3.332-.714-1.195 0-2.259.22-3.192.658-.933.439-1.657 1.064-2.17 1.876-.513.812-.77 1.76-.77 2.842 0 1.083.252 2.007.756 2.772a6.714 6.714 0 001.82 1.876c.71.485 1.624 1.008 2.744 1.568.915.467 1.591.835 2.03 1.106.439.27.78.56 1.022.868.243.308.364.677.364 1.106 0 .579-.191 1.055-.574 1.428-.383.373-.938.56-1.666.56-.821 0-1.475-.22-1.96-.658a2.118 2.118 0 01-.728-1.638v-.532a.324.324 0 00-.098-.238.324.324 0 00-.238-.098h-3.22a.324.324 0 00-.238.098.324.324 0 00-.098.238v.728c0 1.083.266 2.04.798 2.87.532.83 1.283 1.475 2.254 1.932.97.457 2.1.686 3.388.686zm14.56 0c1.904 0 3.43-.5 4.578-1.498 1.148-.999 1.722-2.347 1.722-4.046 0-.952-.205-1.764-.616-2.436a5.687 5.687 0 00-1.526-1.666c-.607-.439-1.451-.957-2.534-1.554l-.588-.336c-.952-.467-1.661-.845-2.128-1.134-.467-.29-.812-.593-1.036-.91a1.892 1.892 0 01-.336-1.12c0-.616.191-1.097.574-1.442.383-.345.91-.518 1.582-.518.803 0 1.437.224 1.904.672.467.448.7 1.008.7 1.68v.504c0 .093.033.173.098.238a.324.324 0 00.238.098h3.22a.324.324 0 00.238-.098.324.324 0 00.098-.238v-.56c0-1.12-.27-2.11-.812-2.968-.541-.859-1.297-1.526-2.268-2.002-.97-.476-2.081-.714-3.332-.714-1.195 0-2.259.22-3.192.658-.933.439-1.657 1.064-2.17 1.876-.513.812-.77 1.76-.77 2.842 0 1.083.252 2.007.756 2.772A6.714 6.714 0 0086.6 76.2c.71.485 1.624 1.008 2.744 1.568.915.467 1.591.835 2.03 1.106.439.27.78.56 1.022.868.243.308.364.677.364 1.106 0 .579-.191 1.055-.574 1.428-.383.373-.938.56-1.666.56-.821 0-1.475-.22-1.96-.658a2.118 2.118 0 01-.728-1.638v-.532a.324.324 0 00-.098-.238.324.324 0 00-.238-.098h-3.22a.324.324 0 00-.238.098.324.324 0 00-.098.238v.728c0 1.083.266 2.04.798 2.87.532.83 1.283 1.475 2.254 1.932.97.457 2.1.686 3.388.686zm14.84.028c1.288 0 2.427-.261 3.416-.784a5.58 5.58 0 002.296-2.212c.541-.952.812-2.063.812-3.332v-7.448c0-1.25-.27-2.352-.812-3.304a5.58 5.58 0 00-2.296-2.212c-.99-.523-2.128-.784-3.416-.784-1.288 0-2.422.261-3.402.784a5.602 5.602 0 00-2.282 2.212c-.541.952-.812 2.053-.812 3.304v7.448c0 1.27.27 2.38.812 3.332a5.602 5.602 0 002.282 2.212c.98.523 2.114.784 3.402.784zm0-3.388c-.765 0-1.381-.257-1.848-.77-.467-.513-.7-1.18-.7-2.002v-7.728c0-.84.233-1.517.7-2.03.467-.513 1.083-.77 1.848-.77.784 0 1.41.257 1.876.77.467.513.7 1.19.7 2.03v7.728c0 .821-.233 1.489-.7 2.002-.467.513-1.092.77-1.876.77zM117.988 86a.324.324 0 00.238-.098.324.324 0 00.098-.238V78.02c0-.093.047-.14.14-.14h1.764c.056 0 .103.037.14.112l2.828 7.728c.056.187.187.28.392.28h3.416c.205 0 .308-.084.308-.252a.312.312 0 00-.028-.14l-3.192-8.036c-.037-.093-.01-.159.084-.196a4.812 4.812 0 002.212-1.96c.523-.877.784-1.913.784-3.108 0-1.157-.233-2.184-.7-3.08a5.042 5.042 0 00-1.988-2.086c-.859-.495-1.839-.742-2.94-.742h-6.832a.324.324 0 00-.238.098.324.324 0 00-.098.238v18.928c0 .093.033.173.098.238a.324.324 0 00.238.098h3.276zm2.912-11.144h-2.436c-.093 0-.14-.047-.14-.14v-4.788c0-.093.047-.14.14-.14h2.436c.69 0 1.25.229 1.68.686.43.457.644 1.078.644 1.862 0 .765-.215 1.377-.644 1.834-.43.457-.99.686-1.68.686zm14.56 11.368c1.904 0 3.43-.5 4.578-1.498 1.148-.999 1.722-2.347 1.722-4.046 0-.952-.205-1.764-.616-2.436a5.687 5.687 0 00-1.526-1.666c-.607-.439-1.451-.957-2.534-1.554l-.588-.336c-.952-.467-1.661-.845-2.128-1.134-.467-.29-.812-.593-1.036-.91a1.892 1.892 0 01-.336-1.12c0-.616.191-1.097.574-1.442.383-.345.91-.518 1.582-.518.803 0 1.437.224 1.904.672.467.448.7 1.008.7 1.68v.504c0 .093.033.173.098.238a.324.324 0 00.238.098h3.22a.324.324 0 00.238-.098.324.324 0 00.098-.238v-.56c0-1.12-.27-2.11-.812-2.968-.541-.859-1.297-1.526-2.268-2.002-.97-.476-2.081-.714-3.332-.714-1.195 0-2.259.22-3.192.658-.933.439-1.657 1.064-2.17 1.876-.513.812-.77 1.76-.77 2.842 0 1.083.252 2.007.756 2.772a6.714 6.714 0 001.82 1.876c.71.485 1.624 1.008 2.744 1.568.915.467 1.591.835 2.03 1.106.439.27.78.56 1.022.868.243.308.364.677.364 1.106 0 .579-.191 1.055-.574 1.428-.383.373-.938.56-1.666.56-.821 0-1.475-.22-1.96-.658a2.118 2.118 0 01-.728-1.638v-.532a.324.324 0 00-.098-.238.324.324 0 00-.238-.098h-3.22a.324.324 0 00-.238.098.324.324 0 00-.098.238v.728c0 1.083.266 2.04.798 2.87.532.83 1.283 1.475 2.254 1.932.97.457 2.1.686 3.388.686zM45.076 108a.324.324 0 00.238-.098.324.324 0 00.098-.238v-2.716a.324.324 0 00-.098-.238.324.324 0 00-.238-.098h-7.504c-.093 0-.14-.047-.14-.14V88.736a.324.324 0 00-.098-.238.324.324 0 00-.238-.098H33.82a.324.324 0 00-.238.098.324.324 0 00-.098.238v18.928c0 .093.033.173.098.238a.324.324 0 00.238.098h11.256zm5.992 0a.324.324 0 00.238-.098.324.324 0 00.098-.238V88.736a.324.324 0 00-.098-.238.324.324 0 00-.238-.098h-3.276a.324.324 0 00-.238.098.324.324 0 00-.098.238v18.928c0 .093.033.173.098.238a.324.324 0 00.238.098h3.276zm14.168 0a.324.324 0 00.238-.098.324.324 0 00.098-.238v-2.716a.324.324 0 00-.098-.238.324.324 0 00-.238-.098H58.04c-.112 0-.14-.056-.084-.168l7.504-12.348a.833.833 0 00.112-.42v-2.94a.324.324 0 00-.098-.238.324.324 0 00-.238-.098H53.924a.324.324 0 00-.238.098.324.324 0 00-.098.238v2.716c0 .093.033.173.098.238a.324.324 0 00.238.098h7.196c.112 0 .14.056.084.168L53.7 104.304a.833.833 0 00-.112.42v2.94c0 .093.033.173.098.238a.324.324 0 00.238.098h11.312zm5.488 0c.187 0 .308-.093.364-.28l.644-2.744c.019-.075.065-.112.14-.112h5.236c.075 0 .121.037.14.112l.644 2.744c.056.187.187.28.392.28H81.7c.205 0 .308-.084.308-.252l-.028-.112-5.04-18.956c-.056-.187-.187-.28-.392-.28h-4.06c-.205 0-.336.093-.392.28l-5.04 18.956c-.056.243.037.364.28.364h3.388zm5.6-6.188h-3.696a.186.186 0 01-.112-.042c-.037-.028-.047-.07-.028-.126l1.876-8.12c.019-.075.047-.112.084-.112.037 0 .065.037.084.112l1.932 8.12c.019.056.01.098-.028.126a.186.186 0 01-.112.042zM87.692 108a.324.324 0 00.238-.098.324.324 0 00.098-.238v-7.644c0-.093.047-.14.14-.14h1.764c.056 0 .103.037.14.112l2.828 7.728c.056.187.187.28.392.28h3.416c.205 0 .308-.084.308-.252a.312.312 0 00-.028-.14l-3.192-8.036c-.037-.093-.01-.159.084-.196a4.812 4.812 0 002.212-1.96c.523-.877.784-1.913.784-3.108 0-1.157-.233-2.184-.7-3.08a5.042 5.042 0 00-1.988-2.086c-.859-.495-1.839-.742-2.94-.742h-6.832a.324.324 0 00-.238.098.324.324 0 00-.098.238v18.928c0 .093.033.173.098.238a.324.324 0 00.238.098h3.276zm2.912-11.144h-2.436c-.093 0-.14-.047-.14-.14v-4.788c0-.093.047-.14.14-.14h2.436c.69 0 1.25.229 1.68.686.43.457.644 1.078.644 1.862 0 .765-.215 1.377-.644 1.834-.43.457-.99.686-1.68.686zM105.64 108c1.25 0 2.357-.233 3.318-.7.961-.467 1.703-1.13 2.226-1.988.523-.859.784-1.857.784-2.996v-8.232c0-1.139-.261-2.137-.784-2.996s-1.265-1.521-2.226-1.988c-.961-.467-2.067-.7-3.318-.7h-6.02a.324.324 0 00-.238.098.324.324 0 00-.098.238v18.928c0 .093.033.173.098.238a.324.324 0 00.238.098h6.02zm-2.268-3.388c-.093 0-.14-.047-.14-.14V91.928c0-.093.047-.14.14-.14h2.296c.71 0 1.279.247 1.708.742.43.495.644 1.162.644 2.002v7.336c-.019.821-.243 1.48-.672 1.974-.43.495-.99.742-1.68.742l-2.296.028zm-64.008 25.612c1.904 0 3.43-.5 4.578-1.498 1.148-.999 1.722-2.347 1.722-4.046 0-.952-.205-1.764-.616-2.436a5.687 5.687 0 00-1.526-1.666c-.607-.439-1.451-.957-2.534-1.554l-.588-.336c-.952-.467-1.661-.845-2.128-1.134-.467-.29-.812-.593-1.036-.91a1.892 1.892 0 01-.336-1.12c0-.616.191-1.097.574-1.442.383-.345.91-.518 1.582-.518.803 0 1.437.224 1.904.672.467.448.7 1.008.7 1.68v.504c0 .093.033.173.098.238a.324.324 0 00.238.098h3.22a.324.324 0 00.238-.098.324.324 0 00.098-.238v-.56c0-1.12-.27-2.11-.812-2.968-.541-.859-1.297-1.526-2.268-2.002-.97-.476-2.081-.714-3.332-.714-1.195 0-2.259.22-3.192.658-.933.439-1.657 1.064-2.17 1.876-.513.812-.77 1.76-.77 2.842 0 1.083.252 2.007.756 2.772a6.714 6.714 0 001.82 1.876c.71.485 1.624 1.008 2.744 1.568.915.467 1.591.835 2.03 1.106.439.27.78.56 1.022.868.243.308.364.677.364 1.106 0 .579-.191 1.055-.574 1.428-.383.373-.938.56-1.666.56-.821 0-1.475-.22-1.96-.658a2.118 2.118 0 01-.728-1.638v-.532a.324.324 0 00-.098-.238.324.324 0 00-.238-.098h-3.22a.324.324 0 00-.238.098.324.324 0 00-.098.238v.728c0 1.083.266 2.04.798 2.87.532.83 1.283 1.475 2.254 1.932.97.457 2.1.686 3.388.686zM51.572 130a.324.324 0 00.238-.098.324.324 0 00.098-.238v-7.28c0-.093.047-.14.14-.14h3.024c1.12 0 2.114-.243 2.982-.728a5.038 5.038 0 002.016-2.058c.476-.887.714-1.909.714-3.066 0-1.176-.238-2.221-.714-3.136a5.158 5.158 0 00-2.016-2.128c-.868-.504-1.862-.756-2.982-.756h-6.776a.324.324 0 00-.238.098.324.324 0 00-.098.238v18.956c0 .093.033.173.098.238a.324.324 0 00.238.098h3.276zm2.856-10.892h-2.38c-.093 0-.14-.047-.14-.14v-5.04c0-.093.047-.14.14-.14h2.38c.728 0 1.311.243 1.75.728.439.485.658 1.139.658 1.96 0 .803-.22 1.442-.658 1.918-.439.476-1.022.714-1.75.714zm14.644 11.144c1.288 0 2.427-.261 3.416-.784a5.58 5.58 0 002.296-2.212c.541-.952.812-2.063.812-3.332v-7.448c0-1.25-.27-2.352-.812-3.304a5.58 5.58 0 00-2.296-2.212c-.99-.523-2.128-.784-3.416-.784-1.288 0-2.422.261-3.402.784a5.602 5.602 0 00-2.282 2.212c-.541.952-.812 2.053-.812 3.304v7.448c0 1.27.27 2.38.812 3.332a5.602 5.602 0 002.282 2.212c.98.523 2.114.784 3.402.784zm0-3.388c-.765 0-1.381-.257-1.848-.77-.467-.513-.7-1.18-.7-2.002v-7.728c0-.84.233-1.517.7-2.03.467-.513 1.083-.77 1.848-.77.784 0 1.41.257 1.876.77.467.513.7 1.19.7 2.03v7.728c0 .821-.233 1.489-.7 2.002-.467.513-1.092.77-1.876.77zm15.232 3.36c1.27 0 2.39-.247 3.36-.742a5.362 5.362 0 002.254-2.114c.532-.915.798-1.97.798-3.164v-.084a.324.324 0 00-.098-.238.324.324 0 00-.238-.098l-3.276-.14c-.224 0-.336.103-.336.308v.364c0 .765-.224 1.377-.672 1.834-.448.457-1.045.686-1.792.686-.747 0-1.344-.229-1.792-.686-.448-.457-.672-1.069-.672-1.834v-8.204c0-.765.224-1.381.672-1.848.448-.467 1.045-.7 1.792-.7.747 0 1.344.233 1.792.7.448.467.672 1.083.672 1.848v.364c0 .205.112.308.336.308l3.276-.14a.305.305 0 00.238-.112.373.373 0 00.098-.252v-.14c0-1.195-.266-2.24-.798-3.136-.532-.896-1.283-1.591-2.254-2.086-.97-.495-2.09-.742-3.36-.742s-2.39.252-3.36.756a5.426 5.426 0 00-2.254 2.142c-.532.924-.798 1.993-.798 3.206v7.784c0 1.232.266 2.315.798 3.248a5.401 5.401 0 002.254 2.156c.97.504 2.09.756 3.36.756zM96.848 130a.324.324 0 00.238-.098.324.324 0 00.098-.238v-5.6a.43.43 0 01.056-.168l1.26-1.82c.037-.056.075-.084.112-.084.037 0 .065.028.084.084l3.976 7.672c.093.168.224.252.392.252h3.584c.205 0 .308-.075.308-.224a.43.43 0 00-.056-.168l-5.488-10.584a.348.348 0 010-.196l5.18-8.036c.075-.112.089-.205.042-.28-.047-.075-.135-.112-.266-.112h-3.612a.439.439 0 00-.392.224l-5.012 7.616c-.019.056-.051.075-.098.056-.047-.019-.07-.056-.07-.112v-7.448a.324.324 0 00-.098-.238.324.324 0 00-.238-.098h-3.276a.324.324 0 00-.238.098.324.324 0 00-.098.238v18.928c0 .093.033.173.098.238a.324.324 0 00.238.098h3.276z"/></defs><g fill="none" transform="translate(-30 -22)"><use fill="#000" filter="url(#a)" xlink:href="#b"/><use fill="#FFF" xlink:href="#b"/></g></svg>'
    },
    menuOptions   : {
        option  : $('.menu .options div h3'),
        btnNext : $('.menu .options .right'),
        btnAfter: $('.menu .options .left'),
        save    : $('.menu .options .save-btn')
    },
    rulesImg      : [
        $('.App .rules .original'),
        $('.App .rules .sheldon')
    ],
    winAnimation : {
        pc      : $('.game-result .pc'),
        player  : $('.game-result .player')
    },
    winAnimation2 :{
        pc      : $('.game-result .right button'),
        player  : $('.game-result .left button')
    }
}

const random = (min,max)=>{
    return (Math.random() * (max - min) + min).toFixed(0);
}

let optionSelect ;
let arrowColor = 'white'
let arrow = {
    icon: `<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M7.70703 14.707C7.5195 14.8945 7.26519 14.9998 7.00003 14.9998C6.73487 14.9998 6.48056 14.8945 6.29303 14.707L2.29303 10.707C2.10556 10.5195 2.00024 10.2652 2.00024 10C2.00024 9.73485 2.10556 9.48054 2.29303 9.29301L6.29303 5.29301C6.48163 5.11085 6.73423 5.01006 6.99643 5.01234C7.25863 5.01461 7.50944 5.11978 7.69485 5.30519C7.88026 5.4906 7.98543 5.74141 7.9877 6.00361C7.98998 6.26581 7.88919 6.51841 7.70703 6.70701L5.41403 9.00001H17C17.2652 9.00001 17.5196 9.10537 17.7071 9.2929C17.8947 9.48044 18 9.73479 18 10C18 10.2652 17.8947 10.5196 17.7071 10.7071C17.5196 10.8947 17.2652 11 17 11H5.41403L7.70703 13.293C7.8945 13.4805 7.99982 13.7348 7.99982 14C7.99982 14.2652 7.8945 14.5195 7.70703 14.707Z" fill="${arrowColor}"/></svg>`
} 
let player = {
    choice      : '',
    version     : 0,
    language    : 1,
    score       : 0,
    theme       : 0
}
let playerScorehtml = $('.App .score .score-box h3');

// cambia el display del elemento
let show =(element, value)=>{
    element.style.display = `${value}`;
}

/*

    Crear función para seleccionar una opción de juego(piedra, 
    papel o tijeras). Recibir ese valor y enviarlo a la siguiente 
    interfaz, luego ejecutar la elección de la pc y determinar 
    quien gana.

  X  1. función de seleccion y retorno de elección

  X  2. función para seleccionar aleatoriamente una opción
    y devolver el valor. dentro de esta evaluar quien es el 
    ganador y guardar el score.

  X  3. función para jugar nuevamente.

  X  4. Agregar un menu con opciones para: cambiar de tema,
     cambiar de lenguaje y versión de juego(original,sheldon).

  X  5. crear funciones para cambio de tema , cambio de lenguaje y cambio de versión.

     TODO: 
        * funciones del boton para ver el menu

    x   - Cambiar textos segun el lenguaje seleccionado
    x   - Guardar el objeto player en la localStorage y crear
    x  funcion para cargar sus datos. 
    x   - funciones del menu principal.
    x   - evaluar si hacer otro html para el idioma o cambiar 
        textos dentro del mismo.
    x   - cambio de imagen de reglas según la versión del juego.
    x   - Animaciones para el ganador 
    x   - Agregar los colores para los temas
        - añadir puntaje al ganar (10 por win tal vez)


        si se van a mapear los textos serian los siguientes 
        X    - Menus
        X    - seleccion de jugada
        X    - boton de reglas
        X    - boton de jugar de nuevo
        X    - contenedor de puntaje

*/


function PlayerChoice(value){
    player.choice = icons[value].name;
    others.choiceSelected.innerHTML = icons[value].icon;
    others.choiceSelected.classList.remove(icons[0].name);
    others.choiceSelected.classList.remove(icons[1].name);
    others.choiceSelected.classList.remove(icons[2].name);
    others.choiceSelected.classList.remove(icons[3].name);
    others.choiceSelected.classList.remove(icons[4].name);
    others.choiceSelected.classList.add(icons[value].name);

    show(interfaces.choice,'none');
    show(interfaces.results.main,'grid');
    Combat();
}

function Combat(){
    let pc 

    if(player.version == options.versions[0]){
        pc = random(0,2);
    } else {
        pc = random(0,(icons.length-1));
    }

    let win = false;
    
    others.pcChoice.innerHTML = icons[pc].icon;
    show(others.pcChoice,'flex');
    // Algoritmo para revisar quien gana, en las 2 versiones
    if(player.version == options.versions[0]){
        // normal version
        others.pcChoice.classList.remove(icons[0].name);
        others.pcChoice.classList.remove(icons[1].name);
        others.pcChoice.classList.remove(icons[2].name);
        others.pcChoice.classList.add(icons[pc].name);
    
        if(player.choice != icons[pc].name ){
            
            switch (player.choice) {
                case 'rock':
                    if(icons[pc].name == 'scissors'){
                        win = true;
                    } else {
                        win = false;
                    }
    
                    break;
    
                case 'paper':
                    if(icons[pc].name == 'rock'){
                        win = true;
                    } else {
                        win = false;
                    }
                    
                    break;
            
                default:
                    // scissors
                    if(icons[pc].name == 'paper'){
                        win = true;
                    } else {
                        win = false;
                    }
                    break;
            }
        } else {
            win = 'tie'
        }
    } else {
        // version Sheldon

        others.pcChoice.classList.remove(icons[0].name);
        others.pcChoice.classList.remove(icons[1].name);
        others.pcChoice.classList.remove(icons[2].name);
        others.pcChoice.classList.remove(icons[3].name);
        others.pcChoice.classList.remove(icons[4].name);
        others.pcChoice.classList.add(icons[pc].name);

        if(player.choice != icons[pc].name){
            switch (player.choice) {
                case 'rock':
                    if(icons[pc].name == 'scissors' ||
                       icons[pc].name == 'lizard'){
                            win = true;
                        } else{
                            win = false;
                        }
                    break;
                case 'paper':
                    if(icons[pc].name == 'rock' ||
                       icons[pc].name == 'spock'){
                        win = true;
                    } else{
                        win = false;
                    }
                    break;
                case 'spock':
                    if(icons[pc].name == 'scissors' ||
                       icons[pc].name == 'rock'){
                        win = true;
                    } else {
                        win = false;
                    }
                    break;
                case 'lizzard':
                    if(icons[pc].name == 'paper' ||
                       icons[pc].name == 'spock'){
                        win = true;
                    } else {
                        win = false;
                    }
                    break;
                default:
                    // scissors
                    if(icons[pc].name == 'paper' ||
                       icons[pc].name == 'lizard'){
                        win = true;
                    } else {
                        win = false;
                    }
                    break;
            }
        } else{
            win = 'tie'
        }
    }

    if(win == true) {
        others.result.innerText = texts.win[player.language];
        others.winAnimation.player.classList.add('win');
        others.winAnimation2.player.classList.add('win2');
        show(others.winAnimation.player,'flex');
        player.score = player.score + 10;
        playerScorehtml.innerText = player.score;
    } else if(win == false){
        others.result.innerText = texts.lose[player.language];
        others.winAnimation.pc.classList.add('win');
        others.winAnimation2.pc.classList.add('win2');
        show(others.winAnimation.pc,'flex');
    } else {
        others.result.innerText = texts.tie[player.language];
        player.score = player.score + 5;
        playerScorehtml.innerText = player.score;
    }
    show(interfaces.results.down,'flex');

    // falta sumar puntos al score
}

function PlayAgain(){
    show(interfaces.results.main,'none');
    show(interfaces.choice,'grid');

    others.winAnimation.pc.classList.remove('win');
    others.winAnimation.player.classList.remove('win');
    others.winAnimation2.pc.classList.remove('win2');
    others.winAnimation2.player.classList.remove('win2');
    show(others.winAnimation.pc,'none');
    show(others.winAnimation.player,'none');
}

function showRules(value){
    
    if(value == 'show'){
            show(interfaces.main,'none');
            show(interfaces.btnRules,'none');
            show(interfaces.score,'none');
            show(interfaces.buttons,'none');
            show(interfaces.rules.interfaz, 'grid');

    }else{
            show(interfaces.main,'grid');
            show(interfaces.btnRules,'flex');
            show(interfaces.score,'flex');
            show(interfaces.buttons,'flex');
            show(interfaces.rules.interfaz, 'none');
    }

    show(others.rulesImg[player.version],'flex')
}

function startNewGame (){
    if(options.versions[player.language][player.version] == 'Original'){
        show(interfaces.gameVersion.original,'grid');
        others.score.logo.innerHTML = others.versionIcons.original;

    } else {
        show(interfaces.gameVersion.sheldon,'grid');
        others.score.logo.innerHTML = others.versionIcons.sheldon;
    }
    show(interfaces.buttons,'flex');
    show(interfaces.menu,'none');
    show(interfaces.main,'grid');
    show(interfaces.score,'flex');

    others.playAgain.addEventListener('click', ()=>{
        PlayAgain();
    });
}

function showOptions(v=0){
    show(interfaces.menuMain,'none');
    show(interfaces.menuOptions,'flex');

    switch (v) {

        case 'Language':
            others.menuOptions.option.innerText = options.languages[player.language][player.language];
            show($('.menu .options div'),'flex');
            show(others.menuOptions.save,'flex');
            optionSelect = 'Language'
            break;
        case 'Themes':
            others.menuOptions.option.innerText = options.themes[player.language][player.theme];
            show($('.menu .options div'),'flex');
            show(others.menuOptions.save,'flex');
            optionSelect = 'Themes'
            break;
        case 'Version':
            others.menuOptions.option.innerText = options.versions[player.language][player.version];
            show($('.menu .options div'),'flex');
            show(others.menuOptions.save,'flex');
            optionSelect = 'Version'
            break;
        default:
            show(interfaces.menuMain,'none');
            show(interfaces.menuOptions,'flex');
            break;
    }

    others.optionsArrows.left.innerHTML = arrow.icon;
    others.optionsArrows.right.innerHTML = arrow.icon;

}

function SelectOption(v){

    let evaluate = (arr,value)=>{
        if(v == 'next'){
            if(value < (arr.length-1)){
                value++
            } else {
                value = 0
            }
        }

        if(v == 'after'){
            if(value > 0){
                value--
            } else {
                value = arr.length-1
            }
        }

        switch (optionSelect) {
            case 'Language':
                others.menuOptions.option.innerText = arr[value];
                player.language = value;
                break;

            case 'Themes':
                others.menuOptions.option.innerText = arr[value];
                player.theme = value;
                break;

            default:
                others.menuOptions.option.innerText = arr[value];
                player.version = value;
                break;
        }

        show($('.menu .options div'),'flex');
        show(others.menuOptions.save,'flex');
    }

    switch (optionSelect) {
        case 'Language':
            evaluate(options.languages[player.language],player.language);
            break;
        case 'Themes':
            evaluate(options.themes[player.language],player.theme);
            break;
    
        default:
            // Version
            evaluate(options.versions[player.language],player.version);
            break;
    }
    
}

function SaveOptions(){
    // hacer logica para guardar en local storage con json
    show(interfaces.menuOptions,'none');
    show(interfaces.menuMain,'flex');
    localStorage.setItem('player', JSON.stringify(player));
    window.open('index.html','_self');
}

async function LoadValues() {
    if(localStorage.getItem('player') != undefined){
        const data = await JSON.parse(localStorage.getItem('player'));
        player = data;
    }

    let App = $('body');

    // cambiar interfaz según opciones del jugador.
        //Tema
    App.classList.remove(options.themes[0][0])
    App.classList.remove(options.themes[0][1])
    App.classList.remove(options.themes[0][2])
    App.classList.remove(options.themes[0][3])
    App.classList.remove(options.themes[0][4])
    App.classList.add(options.themes[0][player.theme]);
        // Lenguaje
            // Menu principal
    txtHTML.menuMain[0].innerText       = texts.menus.continue[player.language];
    txtHTML.menuMain[1].innerText       = texts.menus.newGame[player.language];
    txtHTML.menuMain[2].innerText       = texts.menus.Option[player.language];
            // Menu de opciones
    txtHTML.menuOptions[0].innerText    = texts.menus.theme[player.language];
    txtHTML.menuOptions[1].innerText    = texts.menus.language[player.language];
    txtHTML.menuOptions[2].innerText    = texts.menus.version[player.language];
    txtHTML.menuOptions[3].innerText    = texts.menus.save[player.language];
            // en el Juego
    txtHTML.picked[0].innerText         = texts.picked[player.language];
    txtHTML.picked[1].innerText         = texts.pcPicked[player.language];
    interfaces.btnRules.innerText       = texts.rulesBtn[player.language];
    others.playAgain.innerText          = texts.playAgain[player.language];
    $('.score .score-box h5').innerText = texts.score[player.language];

    if(player.language == 1) $('.html').lang = 'es';
        else $('html').lang = 'en';
}

function showMenu(){
    if(interfaces.main.style.display == 'grid'){
        show(interfaces.main,'none');
        show(interfaces.score,'none');
        show(interfaces.btnRules,'none');
        show(interfaces.menu,'flex');
        $('.App .buttons .btn-menu').innerText = texts.back[player.language];
    } else {
        show(interfaces.main,'grid');
        show(interfaces.score,'flex');
        show(interfaces.btnRules,'flex');
        show(interfaces.menu,'none');
        $('.App .buttons .btn-menu').innerText = 'MENU';
    }

}

LoadValues();



